defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.16.0
    - run:
      name: 'Build app'
      command: |
        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-

      - checkout

      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - '~/repo'
  install:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: 'Yarn install'
          command: yarn
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  # test:
  #   <<: *defaults
  #   steps:
  #     - restore_cache:
  #         key: source-{{ .Branch }}-{{ .Revision }}
  #     - restore_cache:
  #         key: dependency-cache-{{ checksum "package.json" }}
  #     - run:
  #         name: 'Test'
  #         command: npm run test
  build:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: 'Build app'
          command:
            REACT_APP_ENV=production REACT_APP_GOOGLE_MAPS_KEY=${SANDPIT_REACT_APP_GOOGLE_MAPS_KEY}
            REACT_APP_LEGACY=${SANDPIT_REACT_APP_LEGACY} REACT_APP_GRAPH_HOST=${SANDPIT_REACT_APP_GRAPH_HOST} yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build
            - scripts
            - package.json
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: sudo apt-get update && sudo apt-get install -y python-dev
      - run: sudo curl -O https://bootstrap.pypa.io/get-pip.py
      - run: sudo python get-pip.py
      - run: sudo pip install awscli --upgrade
      - run: aws --version
      - run: aws s3 ls
      - run:
          name: 'Deploy to S3 DEV'
          command: |
            export ACCOUNT_ID=159220020591
            source scripts/assume-role.sh
            aws s3 sync build/ s3://$AWS_BUCKET --delete --region $AWS_REGION
            aws cloudfront create-invalidation --distribution-id "EJBM66ARV7ZA9" --paths /index.html
  build-qa:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: 'Build app'
          command:
            REACT_APP_ENV=production REACT_APP_GOOGLE_MAPS_KEY=${NONPROD_REACT_APP_GOOGLE_MAPS_KEY}
            REACT_APP_LEGACY=${NONPROD_REACT_APP_LEGACY} REACT_APP_GRAPH_HOST=${NONPROD_REACT_APP_GRAPH_HOST} yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build
            - scripts
            - package.json
  deploy-qa:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: sudo apt-get update && sudo apt-get install -y python-dev
      - run: sudo curl -O https://bootstrap.pypa.io/get-pip.py
      - run: sudo python get-pip.py
      - run: sudo pip install awscli --upgrade
      - run: aws --version
      - run: aws s3 ls
      - run:
          name: 'Deploy to S3 QA'
          command: |
            export ACCOUNT_ID=211853473677
            source scripts/assume-role.sh
            aws s3 ls
            aws s3 sync build/ s3://${NONPROD_AWS_BUCKET} --delete --region $AWS_REGION
            aws cloudfront create-invalidation --distribution-id "E8T1Z3NYNLEPU" --paths /index.html
  build-prod:
    <<: *defaults
    steps:
      - restore_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: 'Build app'
          command:
            REACT_APP_ENV=production REACT_APP_GOOGLE_MAPS_KEY=${PROD_REACT_APP_GOOGLE_MAPS_KEY}
            REACT_APP_LEGACY=${PROD_REACT_APP_LEGACY} REACT_APP_GRAPH_HOST=${PROD_REACT_APP_GRAPH_HOST} yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build
            - scripts
            - package.json
  deploy-prod:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: sudo apt-get update && sudo apt-get install -y python-dev
      - run: sudo curl -O https://bootstrap.pypa.io/get-pip.py
      - run: sudo python get-pip.py
      - run: sudo pip install awscli --upgrade
      - run: aws --version
      - run: aws s3 ls
      - run:
          name: 'Deploy to S3 PROD'
          command: |
            export ACCOUNT_ID=985566274543
            source scripts/assume-role.sh
            aws s3 sync build/ s3://$AWS_BUCKET --delete --region $AWS_REGION
            aws cloudfront create-invalidation --distribution-id "EJBM66ARV7ZA9" --paths /index.html

workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - install:
          requires:
            - checkout_code
      # - test:
      #     requires:
      #       - install
      - build:
          requires:
            - install
      - deploy:
          requires:
            # - test
            - build
      - qa-approval:
          type: approval
          requires:
            - deploy
          filters:
            branches:
              only:
                - master
      - build-qa:
          requires:
            - qa-approval
      - deploy-qa:
          requires:
            - build-qa
          filters:
            branches:
              only:
                - master
      - prod-approval:
          type: approval
          requires:
            - deploy-qa
          filters:
            branches:
              only:
                - master
      - build-prod:
          requires:
            - prod-approval
      - deploy-prod:
          requires:
            - build-prod
          filters:
            branches:
              only:
                - master
